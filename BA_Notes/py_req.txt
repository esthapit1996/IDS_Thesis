1. Scapy

What is Scapy?
- Packet Crafting and Analysis: Scapy allows users to create custom packets, send them over the network, capture packets, and analyze the results. It supports a wide range of network protocols.
- Flexible and Extensible: It can be easily extended by adding new protocols and features. Scapy is useful for network testing, network security, and teaching.
- Interactive: It provides an interactive shell for users to create and manipulate packets easily. It can also be scripted using Python for automated tasks.

Key Features of Scapy:
- Packet Creation: Users can create packets from scratch or decode existing packets.
- Packet Manipulation: Modify packets to test different network configurations or behaviors.
- Packet Sending and Receiving: Send packets to the network and receive responses.
- Network Scanning: Perform network scans and discovery.
- Protocol Support: Extensive support for various protocols, including Ethernet, IP, TCP, UDP, ARP, ICMP, and more.

What is libpcap?
- Packet Capture Library: libpcap (Packet Capture Library) is a system-independent interface for user-level packet capture. It provides the underlying engine for packet capture and injection.
- Cross-Platform: Available on multiple platforms including Linux, macOS, and Windows (as WinPcap).
- API for Network Analysis: Provides an API that allows programs to capture and analyze network packets.

Relation to Scapy:
- Backend for Packet Capture: Scapy uses libpcap for packet capturing and filtering. It leverages the capabilities of libpcap to capture live traffic from network interfaces.

What is tcpdump?
- Command-Line Packet Analyzer: tcpdump is a command-line utility that allows users to capture and display network packets being transmitted or received over a network.
- Uses libpcap: tcpdump uses the libpcap library for packet capture.
- Widely Used: Commonly used by network administrators for debugging and monitoring network traffic.

Relation to Scapy:
- Similar Functionality: Both Scapy and tcpdump can capture and analyze network packets. However, tcpdump is more focused on capturing and displaying packets in real-time, while Scapy provides more advanced features for crafting and manipulating packets.
- Interoperability: Packets captured by tcpdump can be saved to a file (pcap format), which can then be read and processed by Scapy.

Functions used:
- PcapWriter() <- scapy : Handles writing captured packets to a PCAP file.
- haslayer() <- scapy : Checks if a packet contains a specific protocol layer.
- summary() <- scapy : Provides a brief textual summary of a packet.
- sniff() <- libpcap : Captures packets from the network, filters based on specified criteria, and processes each packet using a callback function. 
           The parameters and functionality of Scapy's sniff function are influenced by libpcap, which is a packet capture library used under the hood by many packet capture tools, including Wireshark. 